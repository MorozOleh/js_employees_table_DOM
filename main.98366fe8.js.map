{"version":3,"sources":["scripts/main.js"],"names":["checkedStatusOfSorting","body","document","querySelector","tableHead","tableBody","getNumber","checkedValue","replace","sortTableHandler","e","cellIndex","target","undefined","sortedByCategory","rows","sort","currentElement","nextElement","currentValue","cells","innerText","nextValue","localeCompare","append","addEventListener","insertAdjacentHTML","form","preventDefault","inputValues","newEmployee","querySelectorAll","reduce","accumulator","item","children","dataset","qa","value","name","length","throwNotification","position","age","office","salary","toLocaleString","elements","forEach","elem","title","description","type","notification","createElement","className","setAttribute","classList","add","notificationTitle","notificationText","setTimeout","remove","toggleActiveField","row","closest","inputByDoubleClick","initialValue","appendChild","focus","focusedInput","modifiedActiveInput","typeEvent","evt","code"],"mappings":"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","file":"main.98366fe8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\nlet checkedStatusOfSorting;\n\nfunction getNumber(checkedValue) {\n  return +checkedValue.replace(/[^0-9]/g, '');\n}\n\nfunction sortTableHandler(e) {\n  const { cellIndex } = e.target;\n\n  checkedStatusOfSorting = checkedStatusOfSorting === undefined\n    ? cellIndex\n    : undefined;\n\n  const sortedByCategory = [...tableBody.rows].sort(\n    (currentElement, nextElement) => {\n      const currentValue = currentElement.cells[cellIndex].innerText;\n      const nextValue = nextElement.cells[cellIndex].innerText;\n\n      switch (true) {\n        case checkedStatusOfSorting !== undefined:\n\n          return getNumber(currentValue)\n            ? getNumber(currentValue) - getNumber(nextValue)\n            : currentValue.localeCompare(nextValue);\n\n        default:\n          return getNumber(currentValue)\n            ? getNumber(nextValue) - getNumber(currentValue)\n            : nextValue.localeCompare(currentValue);\n      }\n    });\n\n  tableBody.append(...sortedByCategory);\n}\n\ntableHead.addEventListener('click', sortTableHandler);\n\nbody.insertAdjacentHTML('beforeend', `\n  <form\n    class=\"new-employee-form\"\n    name=\"new-employee\"\n    method=\"POST\"\n  >\n    <label>\n      Name:\n      <input\n        type=\"text\"\n        name=\"name\"\n        data-qa=\"name\"\n        required\n      >\n    </label>\n    <label>\n      Position:\n      <input\n        type=\"text\"\n        name=\"position\"\n        data-qa=\"position\"\n      >\n    </label>\n    <label>\n      Office:\n      <select id=\"country\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>\n      Age:\n      <input\n        type=\"number\"\n        name=\"age\"\n        data-qa=\"age\"\n        required\n      >\n    </label>\n    <label>\n      Salary:\n      <input\n        type=\"number\"\n        name=\"salary\"\n        data-qa=\"salary\"\n        required\n      >\n    </label>\n    <button type=\"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst form = body.querySelector('form');\n\nform.addEventListener('submit', function(e) {\n  e.preventDefault();\n\n  const inputValues = document.querySelectorAll('form label');\n\n  const newEmployee = [...inputValues].reduce((accumulator, item) => {\n    accumulator[item.children[0].dataset.qa] = item.children[0].value;\n\n    return accumulator;\n  }, {});\n\n  const minNameLength = 4;\n  const minAge = 18;\n  const maxAge = 90;\n\n  if (newEmployee.name.length < minNameLength) {\n    return throwNotification(\n      'Warning message',\n      'Sorry, but your name has to consist at least 4 letters',\n      'error'\n    );\n  } else if (!newEmployee.position) {\n    return throwNotification(\n      'Error message',\n      'Please choose your position',\n      'error'\n    );\n  } else if (newEmployee.age < minAge\n    || newEmployee.age > maxAge) {\n    return throwNotification(\n      'Error message',\n      'You can not add your profile due to your age',\n      'error'\n    );\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${newEmployee.name}</td>\n      <td>${newEmployee.position}</td>\n      <td>${newEmployee.office}</td>\n      <td>${+newEmployee.age}</td>\n      <td>$${(+newEmployee.salary).toLocaleString('en')}</td>\n    </tr>\n    `);\n\n  [...form.elements].forEach(elem => {\n    if (elem.name) {\n      elem.value = '';\n    }\n  });\n\n  return throwNotification(\n    'Success message',\n    'You have done it, you have added your profile',\n    'success');\n});\n\nconst throwNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.className = 'notification';\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add(type);\n\n  const notificationTitle = document.createElement('h2');\n\n  notificationTitle.innerText = title;\n  notificationTitle.className = 'title';\n\n  const notificationText = document.createElement('p');\n\n  notificationText.innerText = description;\n\n  body.append(notification);\n  notification.append(notificationTitle, notificationText);\n\n  setTimeout(function() {\n    return notification.remove();\n  }, 3000);\n};\n\nfunction toggleActiveField(e) {\n  const { target } = e;\n\n  [...tableBody.rows].forEach(row => row.classList.remove('active'));\n  target.closest('tr').classList.add('active');\n};\ntableBody.addEventListener('click', toggleActiveField);\n\ntableBody.addEventListener('dblclick', (e) => {\n  const { target } = e;\n\n  const inputByDoubleClick = document.createElement('input');\n  const initialValue = target.innerText;\n\n  target.innerText = '';\n  inputByDoubleClick.value = initialValue;\n  inputByDoubleClick.className = 'cell-input';\n  target.appendChild(inputByDoubleClick).focus();\n\n  const focusedInput = document.querySelector('.cell-input');\n\n  function modifiedActiveInput() {\n    if (focusedInput.value) {\n      target.innerText = focusedInput.value;\n    } else {\n      target.innerText = initialValue;\n    }\n    focusedInput.remove();\n  }\n\n  ['keydown', 'blur'].forEach(typeEvent => {\n    focusedInput.addEventListener(typeEvent, (evt) => {\n      const { type, code } = evt;\n\n      if (type === 'blur') {\n        setTimeout(() => modifiedActiveInput(), 0);\n      };\n\n      if (code === 'Enter') {\n        modifiedActiveInput();\n      }\n    });\n  });\n});\n"]}